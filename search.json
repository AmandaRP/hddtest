[{"path":"https://amandarp.github.io/hddtest/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Amanda Peterson. Author, maintainer.","code":""},{"path":"https://amandarp.github.io/hddtest/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Peterson (2023). hddtest: Hypothesis Testing High Dimensional Discrete Data. R package version 1.0.1, https://amandarp.github.io/hddtest/.","code":"@Manual{,   title = {hddtest: Hypothesis Testing for High Dimensional Discrete Data},   author = {Amanda Peterson},   year = {2023},   note = {R package version 1.0.1},   url = {https://amandarp.github.io/hddtest/}, }"},{"path":"https://amandarp.github.io/hddtest/index.html","id":"hddtest","dir":"","previous_headings":"","what":"Hypothesis Testing for High Dimensional Discrete Data ","title":"Hypothesis Testing for High Dimensional Discrete Data ","text":"Functions two sample hypothesis testing high dimensional discrete data, specifically multinomial multivariate binary data.","code":""},{"path":"https://amandarp.github.io/hddtest/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Hypothesis Testing for High Dimensional Discrete Data ","text":"can install hddtest github :","code":"install.packages(\"devtools\") devtools::install_github(\"AmandaRP/hddtest\", build_vignettes = TRUE) library(\"hddtest\")"},{"path":"https://amandarp.github.io/hddtest/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Hypothesis Testing for High Dimensional Discrete Data ","text":"Generate two multinomial vectors test whether come underlying distribution: last call can also done using pipe:","code":"data <- genMultinomialData(null_hyp=FALSE, sample_size = 1) multinom.test(x=data[[1]], y=data[[2]]) #> $statistic #> [1] 13.63883 #>  #> $pvalue #> [1] 0 data |> multinom.test() #> $statistic #> [1] 13.63883 #>  #> $pvalue #> [1] 0"},{"path":"https://amandarp.github.io/hddtest/index.html","id":"available-functions-and-datasets","dir":"","previous_headings":"","what":"Available functions and datasets","title":"Hypothesis Testing for High Dimensional Discrete Data ","text":"See help documentation following via ?functionname multinom.test multinom.neighborhood.test genMultinomialData mvbinary.test genMVBinaryData twoNewsGroups","code":""},{"path":"https://amandarp.github.io/hddtest/index.html","id":"vignette","dir":"","previous_headings":"","what":"Vignette","title":"Hypothesis Testing for High Dimensional Discrete Data ","text":"Read multinomial neighborhood test:","code":"vignette(\"multinomial-neighborhood-test-vignette\")"},{"path":"https://amandarp.github.io/hddtest/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Hypothesis Testing for High Dimensional Discrete Data ","text":"[1] Plunkett, . & Park, J. (2018) Two-sample test sparse high-dimensional multinomial distributions, TEST, doi.org/10.1007/s11749-018-0600-8 [2] Plunkett, . & Park, J. (2017) Two-sample tests sparse high-dimensional binary data, Communications Statistics - Theory Methods, 46:22, 11181-11193, DOI: 10.1080/03610926.2016.1260743","code":""},{"path":"https://amandarp.github.io/hddtest/reference/genMVBinaryData.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate multivariate binary data — genMVBinaryData","title":"Generate multivariate binary data — genMVBinaryData","text":"Randomly generate list two matrices containing multivariate binary data.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/genMVBinaryData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate multivariate binary data — genMVBinaryData","text":"","code":"genMVBinaryData(   n = c(30, 30),   d = 2000,   null_hyp = TRUE,   r = 0.3,   epsilon = 0.2,   sigma = c(0.3, 0.1),   gamma = 0.3,   p0 = 0.1 )"},{"path":"https://amandarp.github.io/hddtest/reference/genMVBinaryData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate multivariate binary data — genMVBinaryData","text":"n Vector length 2 containing group size (.e. number samples) group. Default value (30, 30). d Number variables (dimension) data generated. Default value 2000. null_hyp Boolean indicating whether group means (.e. null hypothesis TRUE) different (.e. null hypothesis FALSE). Default value TRUE. r Mean distribution \\(U_{ij} ~ Ber(r)\\). See details . Increase r increase amount correlation among d variables. Default value 0.3. epsilon Used mixture model generates probability vectors. See details . Sparsity can increased decreasing epsilon vice versa. Default value 0.2. sigma Used define uniform distribution used generates probability vectors. See details . Default value (0.3,0.1). gamma Mean dist \\(Z_i ~ Ber(gamma)\\). See details . Default value 0.3. p0 See details . Default 0.1.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/genMVBinaryData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate multivariate binary data — genMVBinaryData","text":"X: List two n d matrices containing generated datasets. p: probability vectors used generate two datasets. null_hyp: Value null_hyp parameter. r: Value r parameter. epsilon: Value epsilon parameter.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/genMVBinaryData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate multivariate binary data — genMVBinaryData","text":"\\((,j)^{th}\\) entry \\(c^{th}\\) matrix \\(X_{cij} = (1 - U_{ij})Y_{icj} + U_{ij}Z_{}\\) \\(U_{ij} \\sim Ber(r)\\), \\(Z_i \\sim Ber(\\gamma)\\), \\(Y_{icj} \\sim Ber(p_{jc})\\) \\(p_{jc} = (1 - \\beta)p_{o} + \\beta h_c\\) \\(\\beta \\sim Ber(\\epsilon)\\) \\(h_c \\sim Uniform(0,\\sigma_c)\\)","code":""},{"path":[]},{"path":"https://amandarp.github.io/hddtest/reference/genMVBinaryData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate multivariate binary data — genMVBinaryData","text":"","code":"binData <- genMVBinaryData(null_hyp = TRUE)$X  # Check the dimension of each matrix: lapply(binData, dim) #> [[1]] #> [1]   30 2000 #>  #> [[2]] #> [1]   30 2000 #>"},{"path":"https://amandarp.github.io/hddtest/reference/genMultinomialData.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate multinomial data — genMultinomialData","title":"Generate multinomial data — genMultinomialData","text":"Generate two sets multinomially distributed vectors using rmultinom. Useful hypothesis testing simulations. Three different experiments different probability vectors (length \\(k\\)) available addition user-specified probability vector p: Experiment 1: \\(p_{1i} = \\frac{1/^\\alpha}{\\sum_1^k 1/^\\alpha}\\).       null_hyp parameter FALSE, probability vector       2nd group generated switching position 1st       \\(m^th\\) entries. Experiment 2: \\(p_{1i} = 1/k\\). null_hyp parameter FALSE,       \\(p_{2i} = 0\\) \\(\\1...b\\)       \\(p_{2,b+1}= \\sum_{1}^{b+1} p_{1i} = (b+1)/k \\). Experiment 3: \\(p_{1i} = 1/k\\). null_hyp parameter FALSE,       \\(p_{2i} = 0\\) \\(\\1...b\\) \\(p_{2i} = 1/(k − b)\\)       \\(> b\\).","code":""},{"path":"https://amandarp.github.io/hddtest/reference/genMultinomialData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate multinomial data — genMultinomialData","text":"","code":"genMultinomialData(   null_hyp = TRUE,   p = NULL,   k = 2000,   n = c(8000, 8000),   sample_size = 30,   expID = 1,   alpha = 0.45,   m = 1000,   numzero = 50,   ... )"},{"path":"https://amandarp.github.io/hddtest/reference/genMultinomialData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate multinomial data — genMultinomialData","text":"null_hyp logical; TRUE, generate data using distribution. Default value TRUE. p optional 2 \\(k\\) matrix specifying probabilities \\(k\\) categories two groups. row p must sum 1. defined, remaining parameters function definition ignored. Default value NULL. k integer representing dimension (number categories). Default 2000. n Vector length 2 specifying parameter multinomial distribution used define total number objects put \\(k\\) bins typical multinomial experiment. sample_size integer specifying number random vectors generate two groups. expID Experiment number 1-3. Default 1. alpha Number 0 1. Used experiment 1. Default 0.45. m integer 2 \\(k\\). Used experiment 1 alternative hypothesis. Default 1000. numzero integer 1 \\(k\\)-1. Used experiments 2 3 alternative hypothesis. Default 50. ... Additional parameters.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/genMultinomialData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate multinomial data — genMultinomialData","text":"list containing two matrices dimension sample_size \\(k\\).","code":""},{"path":"https://amandarp.github.io/hddtest/reference/genMultinomialData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate multinomial data — genMultinomialData","text":"","code":"#Generate data when the null hypothesis is FALSE: X <- genMultinomialData(FALSE)  #Dimension of the two generated datasets: lapply(X, dim) #> [[1]] #> [1]   30 2000 #>  #> [[2]] #> [1]   30 2000 #>   #Proportion of entries less than 5 in the first dataset: sum(X[[1]]<5)/(nrow(X[[1]])*ncol(X[[1]])) #> [1] 0.6975333"},{"path":"https://amandarp.github.io/hddtest/reference/hddtest.html","id":null,"dir":"Reference","previous_headings":"","what":"hddtest: Two-sample hypothesis testing for high dimensional discrete disributions — hddtest","title":"hddtest: Two-sample hypothesis testing for high dimensional discrete disributions — hddtest","text":"hdd test package provides functionality two-sample hypothesis testing high dimensional discrete data. Currently, testing multinomial data supported.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/hddtest.html","id":"hddtest-functions","dir":"Reference","previous_headings":"","what":"hddtest functions","title":"hddtest: Two-sample hypothesis testing for high dimensional discrete disributions — hddtest","text":"multinom.test, multinom.neighborhood.test, genMultinomialData, mvbinary.test, genMVBinaryData","code":""},{"path":"https://amandarp.github.io/hddtest/reference/hddtest.html","id":"data","dir":"Reference","previous_headings":"","what":"Data","title":"hddtest: Two-sample hypothesis testing for high dimensional discrete disributions — hddtest","text":"twoNewsGroups","code":""},{"path":"https://amandarp.github.io/hddtest/reference/hddtest.html","id":"vignettes","dir":"Reference","previous_headings":"","what":"Vignettes","title":"hddtest: Two-sample hypothesis testing for high dimensional discrete disributions — hddtest","text":"vignette(\"multinomial-neighborhood-test-vignette\")","code":""},{"path":"https://amandarp.github.io/hddtest/reference/hddtest.html","id":"authors","dir":"Reference","previous_headings":"","what":"Authors","title":"hddtest: Two-sample hypothesis testing for high dimensional discrete disributions — hddtest","text":"Amanda Peterson","code":""},{"path":"https://amandarp.github.io/hddtest/reference/hddtest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"hddtest: Two-sample hypothesis testing for high dimensional discrete disributions — hddtest","text":"Amanda Plunkett & Junyong Park (2018) Two-Sample Test Sparse High Dimensional Multinomial Distributions, TEST, https://doi.org/10.1007/s11749-018-0600-8 Amanda Plunkett & Junyong Park (2017) Two-sample Tests Sparse High-Dimensional Binary Data, Communications Statistics - Theory Methods, 46:22, 11181-11193","code":""},{"path":"https://amandarp.github.io/hddtest/reference/multinom.neighborhood.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform the neighborhood test for multinom.test — multinom.neighborhood.test","title":"Perform the neighborhood test for multinom.test — multinom.neighborhood.test","text":"Peforms two sample test two multinomial vectors testing \\(H_0:\\) underlying multinomial probability vectors within neighborhood one another vs. \\(H_1:\\) .","code":""},{"path":"https://amandarp.github.io/hddtest/reference/multinom.neighborhood.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform the neighborhood test for multinom.test — multinom.neighborhood.test","text":"","code":"multinom.neighborhood.test(x, y = NULL, delta = NULL)"},{"path":"https://amandarp.github.io/hddtest/reference/multinom.neighborhood.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform the neighborhood test for multinom.test — multinom.neighborhood.test","text":"x, y Integer vectors (matrices dataframes containing multiple integer vector observations rows). x y must type dimension. x y matrices (dataframes), \\(^th\\) row x tested \\(^th\\) row y \\(\\) 1..nrow(x). Alternatively, x can list two vectors, matrices, dataframes compared. case, y NULL default. delta number (vector) greater 0.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/multinom.neighborhood.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform the neighborhood test for multinom.test — multinom.neighborhood.test","text":"statistic multinom.test associated p_delta, p_delta  \\(= 1 - pnorm(T - delta)\\). x y two dimensional (, matrices dataframes one row) /delta vector, matrix returned \\((,j)^{th}\\) entry p.delta associated \\(^{th}\\) rows x y \\(j^{th}\\) entry delta vector.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/multinom.neighborhood.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform the neighborhood test for multinom.test — multinom.neighborhood.test","text":"testing equality parameters two populations (multinom.test), frequenly happens null hypothesis rejected even though estimates effect sizes close . However, differences may small parameters considered different practice. neighborhood test useful situation.","code":""},{"path":[]},{"path":"https://amandarp.github.io/hddtest/reference/multinom.neighborhood.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform the neighborhood test for multinom.test — multinom.neighborhood.test","text":"","code":"# Load the twoNewsGroups dataset  data(twoNewsGroups)  # Sample two sets of 200 documents from the sci.med newsGroup (to simulate # the null hypothesis being TRUE). For each of the two groups, sum the # 200 term frequency vectors together. They will be the two vectors that # we test.  num_docs <- 200 vecs2test <- list(NA, 2) row_ids <- 1:nrow(twoNewsGroups$sci.med) group_1 <- sample(row_ids, num_docs) group_2 <- sample(row_ids[-group_1], num_docs)  vecs2test[[1]] <- twoNewsGroups$sci.med[group_1,] |>                     colSums() |>                     matrix(nrow=1) vecs2test[[2]] <- twoNewsGroups$sci.med[group_2,] |>                     colSums() |>                     matrix(nrow=1)  # Test the null that the two vectors come from the same distribution # (i.e. the same news group)  vecs2test |> multinom.test() #> $statistic #> [1] 26.32967 #>  #> $pvalue #> [1] 0 #>   # The above test likely produced a significant p-value meaning that we would # reject the null. However, the difference isn't very interesting. Instead, # test that the differences are within some neighborhood:  vecs2test |> multinom.neighborhood.test(delta=60) #> $statistic #> [1] 26.32967 #>  #> $pvalue_delta #>      [,1] #> [1,]    1 #>"},{"path":"https://amandarp.github.io/hddtest/reference/multinom.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test two multinomial datasets — multinom.test","title":"Test two multinomial datasets — multinom.test","text":"Peforms two-sample test two multinomial vectors testing \\(H_0:\\) underlying multinomial probability vectors vs. \\(H_1:\\) different.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/multinom.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test two multinomial datasets — multinom.test","text":"","code":"multinom.test(x, y = NULL)"},{"path":"https://amandarp.github.io/hddtest/reference/multinom.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test two multinomial datasets — multinom.test","text":"x, y Integer vectors (matrices/dataframes containing multiple integer vector observations rows). x y must type dimension. x y matrices (dataframes), \\(^th\\) row x tested \\(^th\\) row y \\(\\) 1..nrow(x). Alternatively, x can list two vectors, matrices, dataframes compared. case, y NULL default.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/multinom.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test two multinomial datasets — multinom.test","text":"statistic associated p-value. x y either matrices dataframes, statistic p-value returned row.","code":""},{"path":[]},{"path":"https://amandarp.github.io/hddtest/reference/multinom.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test two multinomial datasets — multinom.test","text":"","code":"#Generate two vectors from the same distribution: data <- genMultinomialData(sample_size=1)  #Perform test (the following three calls of multinom.test are equivalent): multinom.test(x=data[[1]], y=data[[2]]) #> $statistic #> [1] 0.8647447 #>  #> $pvalue #> [1] 0.1935895 #>  multinom.test(data) #> $statistic #> [1] 0.8647447 #>  #> $pvalue #> [1] 0.1935895 #>  data |> multinom.test() #> $statistic #> [1] 0.8647447 #>  #> $pvalue #> [1] 0.1935895 #>   #Generate 1000 vectors from each of two different distributions: data <- genMultinomialData(null_hyp=FALSE,sample_size=1000)  #Perform test (compare the ith row of x to the ith row of y for all rows): result <- multinom.test(x=data[[1]],y=data[[2]])  #Return power of test at the alpha=0.05 level: alpha <- 0.05 mean(result$pvalue<alpha) #> [1] 1"},{"path":"https://amandarp.github.io/hddtest/reference/mvbinary.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test two multivariate binary datasets — mvbinary.test","title":"Test two multivariate binary datasets — mvbinary.test","text":"Peforms two-sample test two binary vectors testing \\(H_0:\\) underlying probability vectors vs. \\(H_1:\\) different.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/mvbinary.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test two multivariate binary datasets — mvbinary.test","text":"","code":"mvbinary.test(x, y = NULL, numPerms = 5000)"},{"path":"https://amandarp.github.io/hddtest/reference/mvbinary.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test two multivariate binary datasets — mvbinary.test","text":"x, y Matrices (dataframes) containing multiple integer vector observations rows. x y must type dimension. Alternatively, x can list two matrices (dataframes) compared. case, y NULL default. numPerms Number permutations use calculate p-value. Default value 5000.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/mvbinary.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test two multivariate binary datasets — mvbinary.test","text":"list containing computed statistic, list statistics (null.statistics) used construct null distritubution (permutation method), associated pvalue. pvalue percent null.statistics extreme statistic computed original dataset.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/mvbinary.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test two multivariate binary datasets — mvbinary.test","text":"statistic \\(T = \\sum_{j=1}^d D_j^2 ( |Dj| \\ge \\delta(d))\\) \\(d\\) dimension data. Additionally: \\(Dj = (\\hat{p}_{1j} − \\hat{p}_{2j} )/\\sqrt{ \\hat{p}_j (1 − \\hat{p}_j )(1/n1 + 1/n2) } \\) \\(\\hat{p}_{cj}\\) estimate \\(p_{cj}\\) \\(c^{th}\\) group calculated \\(j^th\\) column mean \\(\\hat{p}_j\\) pooled estimate \\(j^{th}\\) variable. \\(\\delta(d) = \\sqrt{2 log (a_d d)}\\) \\(a_d = (log d)^{-2}\\) p-value associated statistic calculated using permutation method. observation vectors repeatedly shuffled groups, time used re-calculate statistic. null distribution constructed used calcualate p-value.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/mvbinary.test.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Test two multivariate binary datasets — mvbinary.test","text":"described reference , method may perform well (low power) highly correlated variables. Also, note large values numPerms, run time may long. However, larger values numPerms produce accurate estimates p-value.","code":""},{"path":[]},{"path":"https://amandarp.github.io/hddtest/reference/mvbinary.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test two multivariate binary datasets — mvbinary.test","text":"","code":"# Binarize the twoNewsGroups dataset: data(twoNewsGroups) binData <- list(twoNewsGroups[[1]] > 0, twoNewsGroups[[2]] > 0) names(binData) <- names(twoNewsGroups)  # Perform the test: result <- mvbinary.test(binData, numPerms = 100) result$pvalue #> [1] 0  # The following are equivalent to the previous test: result <- mvbinary.test(binData[[1]], binData[[2]], numPerms = 100) result <- binData |> mvbinary.test(numPerms = 100)"},{"path":"https://amandarp.github.io/hddtest/reference/twoNewsGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Document term matrix for documents sampled from two newsgroups — twoNewsGroups","title":"Document term matrix for documents sampled from two newsgroups — twoNewsGroups","text":"dataset containing two document term matrices subsets two newsgroups (rec.sport.baseball sci.med) 20 newsgroups dataset.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/twoNewsGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document term matrix for documents sampled from two newsgroups — twoNewsGroups","text":"","code":"twoNewsGroups"},{"path":"https://amandarp.github.io/hddtest/reference/twoNewsGroups.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Document term matrix for documents sampled from two newsgroups — twoNewsGroups","text":"list two matrices, dimension 594 16214. (,j) entry matrix count (term frequency) jth word ith document. first matrix list contains 594 sampled documents rec.sport.baseball newsgroup. second contains 594 sampled documents sci.med newsgroup.","code":""},{"path":"https://amandarp.github.io/hddtest/reference/twoNewsGroups.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Document term matrix for documents sampled from two newsgroups — twoNewsGroups","text":"http://qwone.com/~jason/20Newsgroups/","code":""}]
