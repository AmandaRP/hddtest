% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binary.R
\name{genMVBinaryData}
\alias{genMVBinaryData}
\title{Generate multivariate binary data}
\usage{
genMVBinaryData(n = c(30, 30), d = 2000, null_hyp = TRUE, r = 0.3,
  epsilon = 0.2, sigma = c(0.3, 0.1), gamma = 0.3, p0 = 0.1)
}
\arguments{
\item{n}{Vector of length 2 containing group size (i.e. number of samples) for
each group. Default value is (30,30).}

\item{d}{Number of variables (dimension) of the data to be generated.
Default value is 2000.}

\item{null_hyp}{Boolean indicating whether group means should be the same
(i.e. null hypothesis is TRUE) or different (i.e. null hypothesis is FALSE).
Default value is TRUE.}

\item{r}{Mean for distribution of of \eqn{U_{ij} ~ Ber(r)}. See details below.
Increase \code{r} to increase the amount of correlation among the \code{d}
variables. Default value is 0.3.}

\item{epsilon}{Used in mixture model that generates the probability vectors.
See details below. Sparsity can be increased by decreasing \code{epsilon}
and vice versa. Default value is 0.2.}

\item{sigma}{Used to define a uniform distribution used to generates the
probability vectors. See details below. Default value is (0.3,0.1).}

\item{gamma}{Mean for dist of \eqn{Z_i ~ Ber(gamma)}. See details below.
Default value is 0.3.}
}
\value{
A list containing the following components:

X List of two n by d matrices each containing the generated datasets.

p The probability vectors used to generate the two datasets.

null_hyp Value of the \code{null_hyp} parameter.

r Value of the \code{r} parameter.

epsilon Value of the \code{epsilon} parameter.
}
\description{
Randomly generate a list of two matrices containing multivariate binary data.
}
\details{
The \eqn{(i,j)^{th}} entry of the \eqn{c^{th}} matrix is \eqn{X_{cij} = (1 - U_{ij})Y_{icj} + U_{ij}Z_{i}} where

\itemize{
  \item \eqn{U_{ij} ~ Ber(r)},
  \item \eqn{Z_i ~ Ber(\gamma)},
  \item \eqn{Y_{icj} ~ Ber(p_{jc})} where
  \itemize{
    \item \eqn{p_{jc} = (1 - \beta)p_{o} + \beta h_c}
    \item \eqn{\beta ~ Ber(\epsilon)}
    \item \eqn{h_c ~ Uniform(0,\sigma_c)}
  }
}
}
\examples{
binData <- genMVBinaryData(null_hyp=TRUE)$X

#Check the dimension of each matrix:
lapply(binData,dim)

#Test whether the two datasets were generated using the same mean:
result <- mvbinary.test(binData,numPerms=1000)
result$pvalue
}
\seealso{
Amanda Plunkett & Junyong Park (2017), \emph{Two-sample tests for sparse
high-dimensional binary data}, Communications in Statistics - Theory and
Methods, 46:22, 11181-11193

Junyong Park & J. Davis (2011), \emph{Estimating and testing conditional sums
of means in high dimensional multivariate binary data}, Journal of Statistical
Planning and Inference, 141:1021-1030
}
